<?php

namespace Oro\BugTrackerBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Oro\BugTrackerBundle\Entity\Activity;
use Oro\BugTrackerBundle\Entity\Issue;
use Oro\BugTrackerBundle\Entity\Project;
use Oro\BugTrackerBundle\Entity\Customer;
use Doctrine\Common\Collections\Criteria;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends EntityRepository
{

    public function getActivityHomepageCollection()
    {

    }

    /**
     * @param Customer $customer
     * @param null $limit
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getActivityCustomerCollection(Customer $customer, $limit = null)
    {
        $activityQb = $this->createQueryBuilder('activity');
        $activityQb->where('activity.customer = :customer');
        $activityQb->setParameter('customer', $customer);
        $activityQb->orderBy('activity.date', Criteria::DESC);

        return $activityQb;
    }

    /**
     * @param Project $project
     * @param null $limit
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getActivityProjectCollection(Project $project, $limit = null)
    {
        $activityQb = $this->createQueryBuilder('activity');
        $activityQb->where('activity.project = :project');
        $activityQb->setParameter('project', $project);
        $activityQb->orderBy('activity.date', Criteria::DESC);

        return $activityQb;
    }

    /**
     * @param Issue $issue
     * @param null $limit
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getActivityIssueCollection(Issue $issue, $limit = null)
    {
        $activityQb = $this->createQueryBuilder('activity');
        $activityQb->where('activity.issue = :issue');
        $activityQb->setParameter('issue', $issue);
        $activityQb->orderBy('activity.date', Criteria::DESC);

        return $activityQb;
    }
}
